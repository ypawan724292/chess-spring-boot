name: CI/CD Multi-Module with Paketo to Azure AKS (Chess)

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      ACR_NAME: ${{ secrets.ACR_NAME }}
      RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
      AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
      SERVICES: "user-service results-service move-service match-making-service"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name $ACR_NAME

      - name: Set Environment Variables
        run: |
          if [[ "${GITHUB_REF_NAME}" == "main" ]]; then
            echo "ENV=prod" >> $GITHUB_ENV
            echo "TAG=prod-${GITHUB_SHA::7}" >> $GITHUB_ENV
          else
            echo "ENV=staging" >> $GITHUB_ENV
            echo "TAG=staging-${GITHUB_SHA::7}" >> $GITHUB_ENV
          fi

      - name: Build & Push Images using Paketo (with Spring Boot Gradle Plugin)
        run: |
          for SERVICE in $SERVICES; do
            ./gradlew :$SERVICE:bootBuildImage \
              -Dspring-boot.build-image.imageName=$ACR_NAME.azurecr.io/$SERVICE:$TAG \
              -Dspring-boot.build-image.pullPolicy=IF_NOT_PRESENT
          done

      - name: Get AKS Credentials & Create Namespace
        run: |
          # Get cluster credentials
          az aks get-credentials \
            --resource-group $RESOURCE_GROUP \
            --name $AKS_CLUSTER_NAME

          # Ensure namespace exists
          kubectl get namespace $ENV >/dev/null 2>&1 || kubectl create namespace $ENV

      - name: Deploy to AKS
        run: |
          for SERVICE in $SERVICES; do
            kubectl set image deployment/$SERVICE $SERVICE=$ACR_NAME.azurecr.io/$SERVICE:$TAG -n $ENV
          done

      - name: Verify Deployment Rollout
        run: |
          for SERVICE in $SERVICES; do
            kubectl rollout status deployment/$SERVICE -n $ENV
          done
